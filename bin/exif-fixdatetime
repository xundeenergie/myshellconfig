#!/bin/bash
export FILELOGLEVEL=WARN
export SCRIPT_LOG=~/logs/exif.log 

parsedatetime() {
    filename="$(basename "${@}")"
    if [[ $filename =~ ^([0-9]{4})(\.|-)([0-9]{2})(\.|-)([0-9]{2})( |_)([0-9]{2})(\.|-)([0-9]{2})(\.|-)([0-9]{2}).*$ ]]; then
        result="$(printf "%04d:%02d:%02d %02d:%02d:%02d"  "${BASH_REMATCH[1]#0}" "${BASH_REMATCH[3]#0}" "${BASH_REMATCH[5]#0}" "${BASH_REMATCH[7]#0}" "${BASH_REMATCH[9]#0}" "${BASH_REMATCH[11]#0}")"
    fi
    
    if [[ $filename =~ ^([0-9]{4})([0-9]{2})([0-9]{2})(_)([0-9]{2})([0-9]{2})([0-9]{2}).*$ ]]; then
        result="$(printf "%04d:%02d:%02d %02d:%02d:%02d"  "${BASH_REMATCH[1]#0}" "${BASH_REMATCH[2]#0}" "${BASH_REMATCH[3]#0}" "${BASH_REMATCH[5]#0}" "${BASH_REMATCH[6]#0}" "${BASH_REMATCH[7]#0}")"
    fi

    # Whatsapp-Bilder
    if [[ $filename =~ ^(IMG-)([0-9]{4})([0-9]{2})([0-9]{2})(-WA)([0-9]{2})([0-9]{2}).*$ ]]; then
        result="$(printf "%04d:%02d:%02d %02d:%02d:%02d"  "${BASH_REMATCH[2]#0}" "${BASH_REMATCH[3]#0}" "${BASH_REMATCH[4]#0}" "${BASH_REMATCH[6]#0}" "${BASH_REMATCH[7]#0}" "00")"
    fi
    
    # eYe20130323123316.jpg
    if [[ $filename =~ ^(eYe)([0-9]{4})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2}).*$ ]]; then
        result="$(printf "%04d:%02d:%02d %02d:%02d:%02d"  "${BASH_REMATCH[2]#0}" "${BASH_REMATCH[3]#0}" "${BASH_REMATCH[4]#0}" "${BASH_REMATCH[5]#0}" "${BASH_REMATCH[6]#0}" "${BASH_REMATCH[7]#0}")"
    fi

    echo "$result"
    return 0
}

fix_datetime () {
    file="${@}"
    loginfo "file: $file "
    newDateTimeOriginal="$(parsedatetime "$file")"
    loginfo "newDateTimeOriginal: $newDateTimeOriginal"
    mime="$(file --mime-type "$file" | awk '{print $NF}')"

    if [ -n "$newDateTimeOriginal" ]; then
        case $mime in 
            image/png)
                exiftool "-creationtime=$newDateTimeOriginal" -if '(not $creationtime)' "$file"
                ;;
            image/jpeg)
                exiftool "-DateTimeOriginal=$newDateTimeOriginal" -if '(not $datetimeoriginal)' "$file"
                exiftool '-createdate<datetimeoriginal' -if '(not $createdate and $datetimeoriginal)' "$file"
                ;;
            *)
                logwarn "unsupportet mimetype $mime for $file"
                ;;
        esac
    fi
    loginfo "$(exiftool -filename -createdate -datetimeoriginal "$file")"
    logwarn "$(readlink -f "$file"): $(exiftool -filename -if '(not ($datetimeoriginal or $createdate))' "$file")"
    loginfo "----------------"
    loginfo ""

}

if [ $# -gt 0 ]; then
    loginfo "Progress only one file from cmdline ${@}"
    fix_datetime "${@}"

else
    loginfo "Progress all *.jpg files in pwd $(pwd)"
    find -iname "*.jp*g"|while read i; do
        fix_datetime "$i"
    done
fi
